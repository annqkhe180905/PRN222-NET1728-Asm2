@page
@model FUNewsManagementSystem.Pages.Staff.NewsModel
@{
    ViewData["Title"] = "News Articles";
}

<div class="container mt-4 container-custom">
    @{
        var defaultImage = "/img/newsDefault.png";
        var newsArticles = Model.NewsArticles;
    }
    <div class="container mt-3">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Success!</strong> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>Error!</strong> @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    </div>

    <div class="mb-3 d-flex justify-content-center">
        <button class="logout-btn w-50" data-bs-toggle="modal" data-bs-target="#createNewsModal">Create News</button>

    </div>



    @for (int i = 0; i < newsArticles.Count; i += 3)
    {
        <div class="row mb-4 px-2">
            @for (int j = i; j < i + 3 && j < newsArticles.Count; j++)
            {

                var news = newsArticles[j];
                <div class="col-md-4 d-flex align-items-stretch">
                    <div class="card card-outside-custom">
                        <div class="card card-custom h-100">
                            <img src="@(string.IsNullOrEmpty(news.ImgUrl) ? defaultImage : $"{news.ImgUrl}")" class="card-img-top" alt="News Image">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title text-truncate" style="font-weight: bold; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">
                                    @news.NewsTitle
                                </h5>
                                <p class="card-text text-truncate" style="display: -webkit-box; -webkit-line-clamp: 1; -webkit-box-orient: vertical; overflow: hidden;">
                                    @news.Headline
                                </p>
                                <p class="card-text text-truncate" style="display: -webkit-box; -webkit-line-clamp: 1; -webkit-box-orient: vertical; overflow: hidden;">
                                    @news.NewsContent
                                </p>
                                <span class="badge @(news.NewsStatus == true ? "bg-success" : "bg-danger") w-50 p-2 text-lg-center">
                                    @(news.NewsStatus == true ? "Published" : "Draft")
                                </span>
                                <span class="text-muted" style="font-size: 0.9rem;">
                                    @(news.CreatedDate.HasValue ? news.CreatedDate.Value.ToString("dd-MM-yyyy HH:mm:ss") : "N/A")
                                </span>
                                
                                <div class="mt-2 d-flex flex-column">
                                    <button class="btn logout-btn mb-2 p-2" data-bs-toggle="modal" data-bs-target="#readMoreModal" onclick="loadNewsDetail('@news.NewsArticleId')">Read More</button>
                                    <button type="button" class="btn btn-warning update-news-btn"
                                            data-id="@news.NewsArticleId"
                                            data-title="@news.NewsTitle"
                                            data-headline="@news.Headline"
                                            data-source="@news.NewsSource"
                                            data-category="@news.CategoryId"
                                            data-tags="@string.Join(",", news.Tags.Select(t => t.TagId))"
                                            data-content="@news.NewsContent"
                                            data-img="@news.ImgUrl"
                                            data-status="@news.NewsStatus"
                                            data-bs-toggle="modal"
                                            data-bs-target="#updateNewsModal">
                                        Update News
                                    </button>


                                    <button type="button" class="btn btn-danger w-100 p-2"
                                            data-bs-toggle="modal" data-bs-target="#deleteModal"
                                            onclick="setDeleteNewsId('@news.NewsArticleId')">
                                        Delete
                                    </button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<div class="modal fade" id="readMoreModal" tabindex="-1" aria-labelledby="readMoreModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="readMoreModalLabel">News Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h4 id="detailNewsTitle"></h4>
                <p id="detailHeadline"></p>
                <p><strong>Category:</strong> <span id="detailCategory"></span></p>
                <p><strong>Created By:</strong> <span id="detailCreatedBy"></span></p>
                <p><strong>News Source:</strong> <span id="detailNewsSource"></span></p>
                <p><strong>Created Date:</strong> <span id="detailCreatedDate" class="text-muted" style="font-size: 0.9rem;"></span></p>
                <p><strong>Modified Date:</strong> <span id="detailModifiedDate" class="text-muted" style="font-size: 0.9rem;"></span></p>

                <p>
                    <strong>Status:</strong>
                    <span id="detailNewsStatus" class="status-badge"></span>
                </p>

                <p><strong>Tags:</strong> <span id="detailTags"></span></p>

                <img id="detailImgUrl" src="" class="img-fluid" alt="News Image">

                <p id="detailNewsContent"></p>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="text-danger fw-bold">Are you sure you want to delete this news article?</p>
                <form method="post" asp-page-handler="DeleteNews" id="deleteNewsForm">
                    <input type="hidden" name="id" id="deleteNewsId">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-danger" form="deleteNewsForm">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Create News Modal -->
<div class="modal fade" id="createNewsModal" tabindex="-1" aria-labelledby="createNewsModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="createNewsModalLabel">Create News</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="newsTitle" class="form-label">Id</label>
                        <input type="text" class="form-control" id="newsTitle" asp-for="NewsArticle.NewsArticleId" required>
                    </div>
                    <div class="mb-3">
                        <label for="newsTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="newsTitle" asp-for="NewsArticle.NewsTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="headline" class="form-label">Headline</label>
                        <input type="text" class="form-control" id="headline" asp-for="NewsArticle.Headline" required>
                    </div>
                    <div class="mb-3">
                        <label for="source" class="form-label">Source</label>
                        <input type="text" class="form-control" id="source" asp-for="NewsArticle.NewsSource" required>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-select" id="category" asp-for="NewsArticle.CategoryId" asp-items="Model.CategoryList" required></select>
                    </div>
                    <div class="mb-3">
                        <label for="tags" class="form-label">Tags</label>
                        <select multiple class="form-select" id="tags" asp-for="SelectedTagIds" asp-items="Model.TagList"></select>
                    </div>
                    <div class="mb-3">
                        <label for="newsContent" class="form-label">Content</label>
                        <textarea class="form-control" id="newsContent" asp-for="NewsArticle.NewsContent" rows="4" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="imgUpload" class="form-label">Image</label>
                        <input type="file" class="form-control" id="imgUpload" asp-for="ImageFile" accept="image/*">
                    </div>
                    <input type="hidden" asp-for="NewsArticle.CreatedById" />
                    <input type="hidden" asp-for="NewsArticle.CreatedBy" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Update News Modal -->
<div class="modal fade" id="updateNewsModal" tabindex="-1" aria-labelledby="updateNewsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="updateNewsModalLabel">Update News</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" enctype="multipart/form-data" asp-page-handler="UpdateNews">
                <div class="modal-body">
                    <input type="hidden" id="updateNewsId" asp-for="NewsArticle.NewsArticleId">

                    <div class="mb-3">
                        <label for="updateNewsTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="updateNewsTitle" asp-for="NewsArticle.NewsTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="updateHeadline" class="form-label">Headline</label>
                        <input type="text" class="form-control" id="updateHeadline" asp-for="NewsArticle.Headline" required>
                    </div>
                    <div class="mb-3">
                        <label for="updateSource" class="form-label">Source</label>
                        <input type="text" class="form-control" id="updateSource" asp-for="NewsArticle.NewsSource" required>
                    </div>
                    <div class="mb-3">
                        <label for="updateCategory" class="form-label">Category</label>
                        <select class="form-select" id="updateCategory" asp-for="NewsArticle.CategoryId" asp-items="Model.CategoryList" required></select>
                    </div>
                    <div class="mb-3">
                        <label for="updateTags" class="form-label">Tags</label>
                        <select multiple class="form-select" id="updateTags" asp-for="SelectedTagIds" asp-items="Model.TagList"></select>
                    </div>
                    <div class="mb-3">
                        <label for="updateNewsContent" class="form-label">Content</label>
                        <textarea class="form-control" id="updateNewsContent" asp-for="NewsArticle.NewsContent" rows="4" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Current Image</label>
                        <img id="imagePreview" src="" alt="News Image" class="img-fluid rounded" style="max-height: 200px; display: none;">
                    </div>

                    <div class="mb-3">
                        <label for="updateImgUpload" class="form-label">Image</label>
                        <input type="file" class="form-control" id="updateImgUpload" asp-for="ImageFile" accept="image/*">
                    </div>

                    <div class="mb-3">
                        <label for="updateNewsStatus" class="form-label">Status</label>
                        <select class="form-select" id="updateNewsStatus" asp-for="NewsArticle.NewsStatus" required>
                            <option value="true">Published</option>
                            <option value="false">Draft</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger" asp-page-handler="Update">Update</button>

                </div>


            </form>
        </div>
    </div>
</div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("createNewsForm").addEventListener("submit", function (event) {
            event.preventDefault();
            createNews();
        });

        document.getElementById("updateNewsForm").addEventListener("submit", function (event) {
            event.preventDefault();
            updateNews();
        });
    });
    function loadNewsDetail(newsId) {
        fetch(`?handler=NewsDetail&id=${newsId}`)
            .then(response => response.json())
            .then(data => {
                console.log("API Response:", data); 

                document.getElementById('readMoreModalLabel').innerText = data.newsTitle || "No Title";
                document.getElementById('detailHeadline').innerText = data.headline || "No Headline";
                document.getElementById('detailCategory').innerText = data.categoryName || "Uncategorized";
                document.getElementById('detailCreatedBy').innerText = data.createdBy || "Unknown";
                document.getElementById('detailNewsSource').innerText = data.newsSource || "Not Available";
                document.getElementById('detailCreatedDate').innerText = formatDateTime(data.createdDate);
                document.getElementById('detailModifiedDate').innerText = formatDateTime(data.modifiedDate);

                let statusElement = document.getElementById('detailNewsStatus');
                if (data.newsStatus) {
                    statusElement.innerText = "Published";
                    statusElement.className = "status-badge status-published";
                } else {
                    statusElement.innerText = "Draft";
                    statusElement.className = "status-badge status-draft";
                }

                let tagNames = (data.tags && data.tags.length > 0)
                    ? data.tags.map(tag => tag.tagName).join(', ') 
                    : 'None';

                document.getElementById('detailTags').innerText = tagNames;

                document.getElementById('detailImgUrl').src = data.imgUrl ? data.imgUrl : '/img/newsDefault.png';
                document.getElementById('detailNewsContent').innerText = data.newsContent || "No Content Available";
            })
            .catch(error => console.error("Error loading news details:", error));
    }

    function formatDateTime(dateString) {
        if (!dateString) return "N/A"; 

        let date = new Date(dateString);

        let day = String(date.getDate()).padStart(2, '0');
        let month = String(date.getMonth() + 1).padStart(2, '0');
        let year = date.getFullYear();

        let hours = String(date.getHours()).padStart(2, '0');
        let minutes = String(date.getMinutes()).padStart(2, '0');
        let seconds = String(date.getSeconds()).padStart(2, '0');

        return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;
    }

        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".update-news-btn").forEach(button => {
                button.addEventListener("click", function () {
                    console.log("Update button clicked"); 

                    let newsId = this.getAttribute("data-id");
                    let title = this.getAttribute("data-title");
                    let headline = this.getAttribute("data-headline");
                    let source = this.getAttribute("data-source");
                    let category = this.getAttribute("data-category");
                    let tags = this.getAttribute("data-tags") ? this.getAttribute("data-tags").split(",") : [];
                    let content = this.getAttribute("data-content");
                let status = this.getAttribute("data-status") === "True" || this.getAttribute("data-status") === "true" ? "true" : "false";
                let imgUrl = this.getAttribute("data-img");

                    console.log("Fetched Data:", { newsId, title, headline, source, category, tags, content, imgUrl });

                    document.getElementById("updateNewsId").value = newsId;
                    document.getElementById("updateNewsTitle").value = title;
                    document.getElementById("updateHeadline").value = headline;
                    document.getElementById("updateSource").value = source;
                    document.getElementById("updateCategory").value = category;
                    document.getElementById("updateNewsContent").value = content;

                 let statusDropdown = document.getElementById("updateNewsStatus");
            statusDropdown.value = status;

                    let tagSelect = document.getElementById("updateTags");
                    for (let option of tagSelect.options) {
                        option.selected = tags.includes(option.value);
                    }

                    let imagePreview = document.getElementById("imagePreview");
                    if (imgUrl) {
                        imagePreview.src = imgUrl;
                        imagePreview.style.display = "block";
                    } else {
                        imagePreview.style.display = "none";
                    }
                });
            });
        });


    function setDeleteNewsId(newsId) {
        document.getElementById('deleteNewsId').value = newsId;
    }



</script>