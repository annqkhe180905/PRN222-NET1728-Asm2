@page
@model FUNewsManagementSystem.Pages.Staff.NewsModel
@{
    ViewData["Title"] = "News Articles";
}

<div class="container mt-4 container-custom">
    @{
        var defaultImage = "/img/newsDefault.png";
        var newsArticles = Model.NewsList;
    }

    <div class="d-flex justify-content-between mb-3">
        <input type="text" id="searchInput" class="form-control w-25" placeholder="Search by title..." onkeyup="searchNews()">
        <button class="btn btn-primary" onclick="openCreateModal()">Create New</button>
    </div>

    @for (int i = 0; i < newsArticles.Count; i += 3)
    {
        <div class="row mb-4 px-2">
            @for (int j = i; j < i + 3 && j < newsArticles.Count; j++)
            {
                var news = newsArticles[j];
                <div class="col-md-4 d-flex align-items-stretch" id="newsRow_@news.NewsArticleId">
                    <div class="card card-outside-custom">
                        <div class="card card-custom h-100">
                            <img src="@(string.IsNullOrEmpty(news.ImgUrl) ? defaultImage : news.ImgUrl)" class="card-img-top" alt="News Image">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title text-truncate" style="font-weight: bold; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">
                                    @news.NewsTitle
                                </h5>
                                <p class="card-text text-truncate" style="display: -webkit-box; -webkit-line-clamp: 1; -webkit-box-orient: vertical; overflow: hidden;">
                                    @news.Headline
                                </p>
                                <p class="card-text text-truncate" style="display: -webkit-box; -webkit-line-clamp: 1; -webkit-box-orient: vertical; overflow: hidden;">
                                    @news.NewsContent
                                </p>
                                <span class="text-muted" style="font-size: 0.9rem;">@news.CreatedDate</span>
                                <div class="mt-2 d-flex justify-content-between">
                                    <button class="btn btn-warning" onclick="openEditModal('@news.NewsArticleId')">Edit</button>
                                    <button class="btn btn-danger" onclick="openDeleteModal('@news.NewsArticleId')">Delete</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Modal for Creating/Editing News -->
<div class="modal fade" id="newsModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Create News Article</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">&times;</button>
            </div>
            <div class="modal-body">
                <form id="newsForm">
                    <input type="hidden" id="newsId" name="NewsArticleId" />

                    <!-- Title -->
                    <div class="form-group">
                        <label>Title</label>
                        <input type="text" class="form-control" id="newsTitle" name="NewsTitle" required>
                    </div>

                    <!-- Headline -->
                    <div class="form-group">
                        <label>Headline</label>
                        <input type="text" class="form-control" id="headline" name="Headline" required>
                    </div>

                    <!-- Content -->
                    <div class="form-group">
                        <label>Content</label>
                        <textarea class="form-control" id="newsContent" name="NewsContent" rows="4" required></textarea>
                    </div>

                    <!-- Source -->
                    <div class="form-group">
                        <label>Source</label>
                        <input type="text" class="form-control" id="newsSource" name="NewsSource">
                    </div>

                    <!-- Category (Chọn 1) -->
                    <div class="form-group">
                        <label>Category</label>
                        <select class="form-control" id="categoryId" name="CategoryId" required>
                            <option value="">-- Select Category --</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.CategoryId">@category.CategoryName</option>
                            }
                        </select>
                    </div>

                    <!-- Tags (Chọn nhiều) -->
                    <div class="form-group">
                        <label>Tags</label>
                        <select class="form-control" id="tags" name="TagIds" multiple>
                            @foreach (var tag in Model.Tags)
                            {
                                <option value="@tag.TagId">@tag.TagName</option>
                            }
                        </select>
                    </div>

                    <!-- Upload Ảnh -->
                    <div class="form-group">
                        <label>Upload Image</label>
                        <input type="file" class="form-control" id="newsImage" accept="image/*">
                        <img id="previewImage" src="#" alt="Preview" style="display: none; width: 100%; margin-top: 10px;">
                    </div>

                    <!-- Nút Save -->
                    <button type="button" class="btn btn-success mt-3" onclick="saveNews()">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        console.log("Page loaded, ready to trigger modals.");

        // Hiển thị ảnh preview khi chọn file
        $("#newsImage").change(function () {
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#previewImage").attr("src", e.target.result).show();
            };
            reader.readAsDataURL(this.files[0]);
        });
    });

    function openCreateModal() {
        console.log("Opening Create Modal");
        $('#modalTitle').text("Create News Article");
        $('#newsForm')[0].reset();
        $('#newsId').val("");
        $('#previewImage').hide();
        $('#newsModal').modal('show');
    }

    function openEditModal(id) {
        console.log("Opening Edit Modal with ID:", id);
        $.get("?handler=GetNews&id=" + id, function (data) {
            $('#modalTitle').text("Edit News Article");
            $('#newsId').val(data.newsArticleId);
            $('#newsTitle').val(data.newsTitle);
            $('#headline').val(data.headline);
            $('#newsContent').val(data.newsContent);
            $('#newsSource').val(data.newsSource);
            $('#categoryId').val(data.categoryId);
            $('#tags').val(data.tagIds);

            if (data.imgUrl) {
                $("#previewImage").attr("src", data.imgUrl).show();
            } else {
                $("#previewImage").hide();
            }

            $('#newsModal').modal('show');
        });
    }

    function saveNews() {
        var formData = new FormData();
        formData.append("NewsArticle.NewsArticleId", $('#newsId').val());
        formData.append("NewsArticle.NewsTitle", $('#newsTitle').val());
        formData.append("NewsArticle.Headline", $('#headline').val());
        formData.append("NewsArticle.NewsContent", $('#newsContent').val());
        formData.append("NewsArticle.NewsSource", $('#newsSource').val());
        formData.append("NewsArticle.CategoryId", $('#categoryId').val());

        // Lấy danh sách tag
        $('#tags option:selected').each(function () {
            formData.append("NewsArticle.TagIds", $(this).val());
        });

        // Lấy ảnh
        var file = $("#newsImage")[0].files[0];
        if (file) {
            formData.append("NewsImage", file);
        }

        var isEdit = $('#newsId').val() !== "";
        var handler = isEdit ? "Update" : "Create";

        // Thêm anti-forgery token
        formData.append("__RequestVerificationToken", $('input:hidden[name="__RequestVerificationToken"]').val());

        $.ajax({
            type: "POST",
            url: "?handler=" + handler,
            data: formData,
            processData: false,
            contentType: false,
            headers: {
                "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {
                console.log("Success:", response);
                location.reload(); // Load lại trang sau khi lưu thành công
            },
            error: function (xhr) {
                console.error("Error:", xhr.responseText);
                alert("Error saving news article!");
            }
        });
    }

    function openDeleteModal(id) {
        console.log("Confirm Delete for ID:", id);
        if (confirm("Are you sure you want to delete this article?")) {
            deleteNews(id);
        }
    }

    function deleteNews(id) {
        $.ajax({
            type: "POST",
            url: "?handler=Delete",
            contentType: "application/json",
            data: JSON.stringify(id),
            headers: {
                "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function () {
                $("#newsRow_" + id).remove();
                console.log("Deleted successfully");
            },
            error: function (xhr) {
                console.error("Error:", xhr.responseText);
                alert("Error deleting news");
            }
        });
    }

    function searchNews() {
        var input = document.getElementById("searchInput");
        var filter = input.value.toUpperCase();
        var cards = document.getElementsByClassName("card-title");

        for (var i = 0; i < cards.length; i++) {
            var title = cards[i].textContent || cards[i].innerText;
            var row = cards[i].closest(".col-md-4");
            if (title.toUpperCase().indexOf(filter) > -1) {
                row.style.display = "";
            } else {
                row.style.display = "none";
            }
        }
    }
</script>

</script>
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
