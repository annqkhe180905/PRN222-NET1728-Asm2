@page
@model FUNewsManagementSystem.Pages.Admin.ReportModel
@{
}
<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
<link href="~/css/dashboard.css" rel="stylesheet" asp-append-version="true" />
<div class="container mt-4 container-custom">
    <div class="card card-outside-custom d-flex justify-content-center">
        <div class="card card-custom">
            <div class="stats-icon icon-primary">
                <i class="fas fa-newspaper"></i>
            </div>
            <div class="stats-content">
                <h3>@Model.NewsCount</h3>
                <p>Tổng số bài viết</p>
            </div>
        </div>
        <div class="stats-card">
            <div class="stats-icon icon-primary">
                <i class="fa-solid fa-users"></i>
            </div>
            <div class="stats-content">
                <h3>@Model.AccountsCount</h3>
                <p>Tổng số tài khoản</p>
            </div>
        </div>
        <div class="stats-card">
            <div class="stats-icon icon-primary">
                <i class="fa-solid fa-tag"></i>
            </div>
            <div class="stats-content">
                <h3>@Model.TagsCount</h3>
                <p>Tổng số Tag</p>
            </div>
        </div>
        <div class="stats-card">
            <div class="stats-icon icon-primary">
                <i class="fa-solid fa-list"></i>
            </div>
            <div class="stats-content">
                <h3>@Model.CategoriesCount</h3>
                <p>Tổng số Category</p>
            </div>
        </div>
    </div>
    <div class="dashboard-card">
        <form method="get" class="d-grid mb-3 w-100 p-4 gap-2">
            <div class="">
                <label>Từ ngày</label>
                <input type="date" name="startDate" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
            </div>
            <div class="">
                <label>Đến ngày</label>
                <input type="date" name="endDate" class="form-control" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
            </div>
            <div class="">
                <button type="submit" class="btn btn-primary">Lọc</button>
            </div>
        </form>
        <div class="row">
            <div class="col-md-6">
                <div class="chart-container">
                    <canvas id="lineChart" width="800" height="600"></canvas>
                </div>
            </div>
            <div class="col-md-6">
                <div class="chart-container">
                    <canvas id="polarChart" width="800" height="600"></canvas>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="chart-container">
                    <canvas id="barChart" width="800" height="600"></canvas>
                </div>
            </div>
            <div class="col-md-6">
                <div class="chart-container">
                    <canvas id="pieChart" width="800" height="800"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
@{
    var stats = Model.Stats ?? new List<DailyStat>();
    var dates = stats.Select(s => s.Date.ToString("yyyy-MM-dd"));
    var values = stats.Select(s => s.Value);

    var topStat = Model.TopStats;
    var polarLabels = topStat != null ? new[] { $"Tài khoản tạo news nhiều nhất: {topStat.TopAccountNewsCount.AccountName}", $"Category được dùng nhiều nhất: {topStat.TopCategoryUsageCount.CategoryName}" } : new[] { "Không có dữ liệu", "không có dữ liệu" };
    var polarValues = topStat != null ? new[] { topStat.TopAccountNewsCount.Count, topStat.TopCategoryUsageCount.Count } : new[] { 0, 0 };

    var topCategories = Model.TopCategories;
    var barLabels = topCategories.Select(c => c.CategoryName);
    var barValues = topCategories.Select(c => c.Count);

    var topAcc = Model.TopAccountCreateNews;
    var pieLabels = topAcc.Select(c => c.AccountName);
    var pieValues = topAcc.Select(c => c.Count);
}
<style>
    .chart-container {
        display: flex;
        justify-content: center;
        max-width: 800px;
        margin: 0 auto;
    }

    .dashboard-card {
        padding: 20px;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {

        const dates = @Html.Raw(Json.Serialize(dates));
        const values = @Html.Raw(Json.Serialize(values));

        const ctx = document.getElementById('lineChart');
        if (ctx) {
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [
                        {
                            label: 'Số news trong ngày',
                            data: values,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderWidth: 2,
                            fill: true
                        }
                    ]
                },
                options: {
                    scales: {
                        x: {
                            title: { display: true, text: 'Ngày' },
                            grid: {
                                display: true,
                                color: 'rgba(0, 0, 0, 0.1)',
                                lineWidth: 1
                            }
                        },
                        y: {
                            title: { display: true, text: 'Số news tạo trong ngày' },
                            beginAtZero: true,
                            grid: {
                                display: true,
                                color: 'rgba(0, 0, 0, 0.1)',
                                lineWidth: 1
                            }
                        }
                    }
                }
            });
        }

        const polarChart = document.getElementById('polarChart').getContext('2d');
        const polarLabels = @Html.Raw(Json.Serialize(polarLabels));
        const polarValues = @Html.Raw(Json.Serialize(polarValues));

        new Chart(polarChart, {
            type: 'polarArea',
            data: {
                labels: polarLabels,
                datasets: [{
                    label: 'Top 3 đối tượng có số lượng lớn nhất',
                    data: polarValues,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Top 3 đối tượng có số lượng lớn nhất'
                    }
                }
            }
        });


        const barChart = document.getElementById('barChart').getContext('2d');
        const barLabels = @Html.Raw(Json.Serialize(barLabels));
        const barValues = @Html.Raw(Json.Serialize(barValues));


        if (barChart) {
            new Chart(barChart, {
                type: 'bar',
                data: {
                    labels: barLabels,
                    datasets: [
                        {
                            label: 'Số lượng bài viết theo danh mục',
                            data: barValues,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderWidth: 2,
                            fill: true
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'top' },
                        title: { display: true, text: 'Top 5 danh mục phổ biến' }
                    },
                    scales: {
                        y: { beginAtZero: true, title: { display: true, text: 'Số bài viết' } },
                        x: { title: { display: true, text: 'Danh mục' } }
                    }
                }
            });
        }



        const pieChart = document.getElementById('pieChart').getContext('2d');
        const pieLabels = @Html.Raw(Json.Serialize(pieLabels));
        const pieValues = @Html.Raw(Json.Serialize(pieValues));


        if (pieChart) {
            new Chart(pieChart, {
                type: 'pie',
                data: {
                    labels: pieLabels,
                    datasets: [
                        {
                            label: 'Số lượng bài viết đã tạo',
                            data: pieValues,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.6)',
                                'rgba(54, 162, 235, 0.6)',
                                'rgba(255, 206, 86, 0.6)'
                            ],
                            borderWidth: 2,
                            fill: true
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'top' },
                        title: { display: true, text: 'Top 5 tài khoản tạo news nhiều nhất' }
                    },
                    scales: {
                        y: { beginAtZero: true, title: { display: true, text: 'Số bài viết' } },
                        x: { title: { display: true, text: 'Bài viết' } }
                    }
                }
            });
        }
    })
</script>

